{"ts":1352415457305,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"import tweepy\r\nimport webbrowser\r\n\r\n# Make constants to hold values of our keys\r\nCONSUMER_KEY = \"wleBMXN8U0vYy0iyJqUccA\"\r\nCONSUMER_SECRET = \"SDa0M6xromPe5nmHxo17AX1r9zEm7bDXBn52JG4EB9A\"\r\nACCESS_TOKEN = \"89395035-49W6pg7iFpQYbUrsoarGDKWrwgjyKKeqiDNMq0Bd6\"\r\nACCESS_SECRET = \"6C5qOk95i09IiXiQpQH73qMkreTQmL3c3T4oMfk8\"\r\n\r\n# set auth variables\r\nauth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)\r\nauth.set_access_token(ACCESS_TOKEN, ACCESS_SECRET)\r\n\r\n# create a new api\r\napi = tweepy.API(auth)\r\n\r\n# create an instance of the twitter api class\r\nauth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)\r\nauth_url = auth.get_authorization_url()\r\n\r\n# open the window for authorization, twitter will generate the pin\r\nwebbrowser.open(auth_url)\r\nprint \"Copy PIN from the window that opens\"\r\n\r\n# get the pin number from the user\r\nverifier = raw_input('PIN: ').strip()\r\nauth.get_access_token(verifier)\r\n\r\n# get the access key and secret returned from twitter\r\naccess_key = auth.access_token.key\r\naccess_secret = auth.access_token.secret\r\n\r\n# set authorization token\r\nauth.set_access_token(access_key, access_secret)\r\napi = tweepy.API(auth)\r\n\r\n# make a tweet\r\ndef send_tweet():\r\n    tweet_text = raw_input(\"Enter your tweet content below... Only the first 140 characters will be used.\\n>>> \")\r\n    api.update_status(tweet_text[0:140])\r\n    print \"You tweeted \\n'\" + tweet_text[0:140] + \"'\"\r\n    restart = raw_input(\"Do you want to tweet again? (Y/N)\\n>>> \")\r\n    if restart.lower() == \"y\":\r\n        send_tweet()\r\n    else:\r\n        print \"Returning to the Main Menu...\\n\"\r\n\r\n# search twitter\r\ndef keyword_follow():\r\n    search_phrase = raw_input(\"What do you want to search for?\\n>>> \").strip()\r\n    search_number = raw_input(\"How many results do you want to return?\\n>>> \")\r\n    search_result = api.search(search_phrase, rpp=search_number)\r\n    for i in search_result:\r\n        print i.from_user + \" said \" + i.text + \"\\n\"\r\n        to_follow = raw_input(\"Do you want to follow \" + i.from_user + \"? (Y/N)\\n>>> \")\r\n        if to_follow.lower() == \"n\":\r\n            print i.from_user + \" was not followed!\"\r\n        else:\r\n            api.create_friendship(i.from_user)\r\n            print \"You followed \" + i.from_user + \"!\\n\"\r\n            \r\n    # check if the user wants to search again\r\n    restart = raw_input(\"Do you want to search again? (Y/N)\\n>>> \")\r\n    if restart.lower() == \"n\":\r\n        print \"Returning to the Main Menu...\\n\"\r\n    else:\r\n        return keyword_follow()\r\n    \r\ndef keyword_retweet():\r\n    search_phrase = raw_input(\"What do you want to search for?\\n>>> \").strip()\r\n    search_number = raw_input(\"How many results do you want to return?\\n>>> \")\r\n    search_result = api.search(search_phrase, rpp=search_number)\r\n    for i in search_result:\r\n        print i.from_user + \" said \" + i.text + \"\\n\"\r\n        to_retweet = raw_input(\"Do you want to retweet\" + i.from_user + \"? (Y/N)\\n>>> \")\r\n        if to_retweet.lower() == \"n\":\r\n            print i.from_user + \" was not retweeted!\"\r\n        else:\r\n            api.retweet(i.id)\r\n            print \"Retweeted!\\n\"\r\n            again = raw_input(\"See more? (Y/N)\\n>>> \")\r\n            if again.lower() == \"n\":\r\n                break       \r\n    # check if the user wants to search again\r\n    restart = raw_input(\"Do you want to search again? (Y/N)\\n>>> \")\r\n    if restart.lower() == \"n\":\r\n        print \"Returning to the Main Menu...\\n\"\r\n    else:\r\n        return keyword_retweet()\r\n\r\ndef mass_unfollow():\r\n    print \"You can unfollow \" + str(api.rate_limit_status()['remaining_hits']) + \" people this hour...\\n\"\r\n    print \"Checking who doesn't follow you back. This will take a minute.\\n\"\r\n    # first, create some lists to hold the followers\r\n    followers = []\r\n    friends = []\r\n    \r\n    # we have to use a Cursor for pagination purposes\r\n    for follower in tweepy.Cursor(api.followers).items():\r\n        followers.append(follower)\r\n\r\n    for friend in tweepy.Cursor(api.friends).items():\r\n        friends.append(friend)\r\n        \r\n    # create a non_reciprocals list, these are non-followers (set - set)\r\n    non_reciprocal = list(set(friends) - set(followers))\r\n    print str(len(non_reciprocal)) + \" non-reciprocal followers.\\n\"\r\n\r\n    # first, double check that we want to unfollow\r\n    double_check = raw_input(\"Unfollow them? (Y/N) ***WARNING, THIS ACTION CANNOT BE UNDONE***\\n>>> \" )\r\n\r\n    if double_check.lower() == \"y\":\r\n        # count the number of people we unfollow, just for fun\r\n        counter = 0\r\n        for i in non_reciprocal:\r\n            if api.rate_limit_status()['remaining_hits'] > 0:\r\n                api.destroy_friendship(i.screen_name)\r\n                print \"Successfully unfollowed \" + i.screen_name\r\n            else:\r\n                print \"You ran out of hits! Try again in an hour!\"\r\n                break\r\n            counter += 1\r\n        print \"You unfollowed \" + str(counter) + \" people!\\n\"\r\n        print \"Now returning to the Main Menu.\"\r\n    else:\r\n        print \"Returning to the Main Menu...\\n\"\r\n              \r\n# create the menu\r\nkeep_running = True\r\nwhile keep_running:\r\n    print \"Main Menu\"\r\n    print \"---------\\n\"\r\n    selection = raw_input(\"(1)Tweet | (2)Keyword Follow | (3)Keyword Retweet | (4)Mass Unfollow | (5)End\\n\\n>>> \")\r\n    if selection == \"1\":\r\n        print \"New Tweet\"\r\n        print \"---------\\n\"\r\n        send_tweet()\r\n    elif selection == \"2\":\r\n        print \"Keyword Follow\"\r\n        print \"--------------\\n\"\r\n        keyword_follow()\r\n    elif selection == \"3\":\r\n        print \"Keyword Retweet\"\r\n        print \"---------------\\n\"\r\n        keyword_retweet()\r\n    elif selection == \"4\":\r\n        print \"Mass Unfollow\"\r\n        print \"-------------\\n\"\r\n        print \"WARNING: MASS UNFOLLOW IS AGAINST THE TOS OF TWITTER. YOU'VE BEEN WARNED\\n\"\r\n        mass_unfollow()\r\n    else:\r\n        print \"BYE!\\n\\n\"\r\n        keep_running = False\r\n"]],"start1":0,"start2":0,"length1":0,"length2":5874}]],"length":5874}
